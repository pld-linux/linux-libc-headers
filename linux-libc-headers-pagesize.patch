--- linux-2.6.20/include/asm-alpha/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-alpha/page.h	2007-04-02 21:58:18.576624812 +0200
@@ -1,15 +1,15 @@
 #ifndef _ALPHA_PAGE_H
 #define _ALPHA_PAGE_H
 
-#ifdef __KERNEL__
-
-#include <asm/pal.h>
-
 /* PAGE_SHIFT determines the page size */
 #define PAGE_SHIFT	13
 #define PAGE_SIZE	(1UL << PAGE_SHIFT)
 #define PAGE_MASK	(~(PAGE_SIZE-1))
 
+#ifdef __KERNEL__
+
+#include <asm/pal.h>
+
 #ifndef __ASSEMBLY__
 
 #define STRICT_MM_TYPECHECKS
--- linux-2.6.20/include/asm-arm/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-arm/page.h	2007-04-02 21:58:44.914125701 +0200
@@ -11,13 +11,13 @@
 #define _ASMARM_PAGE_H
 
 
-#ifdef __KERNEL__
-
 /* PAGE_SHIFT determines the page size */
 #define PAGE_SHIFT		12
 #define PAGE_SIZE		(1UL << PAGE_SHIFT)
 #define PAGE_MASK		(~(PAGE_SIZE-1))
 
+#ifdef __KERNEL__
+
 /* to align the pointer to the (next) page boundary */
 #define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
 
--- linux-2.6.20/include/asm-avr32/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-avr32/page.h	2007-04-02 21:59:35.677018513 +0200
@@ -8,8 +8,6 @@
 #ifndef __ASM_AVR32_PAGE_H
 #define __ASM_AVR32_PAGE_H
 
-#ifdef __KERNEL__
-
 /* PAGE_SHIFT determines the page size */
 #define PAGE_SHIFT	12
 #ifdef __ASSEMBLY__
@@ -18,6 +16,9 @@
 #define PAGE_SIZE	(1UL << PAGE_SHIFT)
 #endif
 #define PAGE_MASK	(~(PAGE_SIZE-1))
+
+#ifdef __KERNEL__
+
 #define PTE_MASK	PAGE_MASK
 
 #ifndef __ASSEMBLY__
--- linux-2.6.20/include/asm-cris/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-cris/page.h	2007-04-02 21:59:53.650042737 +0200
@@ -1,10 +1,6 @@
 #ifndef _CRIS_PAGE_H
 #define _CRIS_PAGE_H
 
-#ifdef __KERNEL__
-
-#include <asm/arch/page.h>
-
 /* PAGE_SHIFT determines the page size */
 #define PAGE_SHIFT	13
 #ifndef __ASSEMBLY__
@@ -14,6 +10,10 @@
 #endif
 #define PAGE_MASK	(~(PAGE_SIZE-1))
 
+#ifdef __KERNEL__
+
+#include <asm/arch/page.h>
+
 #define clear_page(page)        memset((void *)(page), 0, PAGE_SIZE)
 #define copy_page(to,from)      memcpy((void *)(to), (void *)(from), PAGE_SIZE)
 
--- linux-2.6.20/include/asm-h8300/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-h8300/page.h	2007-04-02 22:00:40.604718532 +0200
@@ -1,14 +1,14 @@
 #ifndef _H8300_PAGE_H
 #define _H8300_PAGE_H
 
-#ifdef __KERNEL__
-
 /* PAGE_SHIFT determines the page size */
 
 #define PAGE_SHIFT	(12)
 #define PAGE_SIZE	(1UL << PAGE_SHIFT)
 #define PAGE_MASK	(~(PAGE_SIZE-1))
 
+#ifdef __KERNEL__
+
 #include <asm/setup.h>
 
 #ifndef __ASSEMBLY__
--- linux-2.6.20/include/asm-ia64/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-ia64/page.h	2007-04-02 22:04:08.544568348 +0200
@@ -7,7 +7,26 @@
  *	David Mosberger-Tang <davidm@hpl.hp.com>
  */
 
-# ifdef __KERNEL__
+# ifndef __KERNEL__
+
+#include <unistd.h>
+
+#define PAGE_SIZE (getpagesize())
+static __inline__ int __getpageshift()
+{
+    int pagesize = getpagesize();
+#if (__GNUC__ >= 4) || ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 4))
+    return (__builtin_clz(pagesize) ^ 31);
+#else
+    register int pageshift = -1;
+    while (pagesize) { pagesize >>= 1; pageshift++; }
+    return pageshift;
+#endif
+}
+#define PAGE_SHIFT (__getpageshift())
+#define PAGE_MASK    (~(PAGE_SIZE-1))
+
+# else
 
 #include <asm/intrinsics.h>
 #include <asm/types.h>
--- linux-2.6.20/include/asm-mips/page.h.orig	2007-04-02 22:05:30.645246999 +0200
+++ linux-2.6.20/include/asm-mips/page.h	2007-04-02 22:05:16.792457574 +0200
@@ -10,7 +10,26 @@
 #define _ASM_PAGE_H
 
 
-#ifdef __KERNEL__
+#ifndef __KERNEL__
+
+#include <unistd.h>
+
+#define PAGE_SIZE (getpagesize())
+static __inline__ int __getpageshift()
+{
+    int pagesize = getpagesize();
+#if (__GNUC__ >= 4) || ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 4))
+    return (__builtin_clz(pagesize) ^ 31);
+#else
+    register int pageshift = -1;
+    while (pagesize) { pagesize >>= 1; pageshift++; }
+    return pageshift;
+#endif
+}
+#define PAGE_SHIFT (__getpageshift())
+#define PAGE_MASK    (~(PAGE_SIZE-1))
+
+#else
 
 #include <spaces.h>
 
--- linux-2.6.20/include/asm-powerpc/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-powerpc/page.h	2007-04-02 22:08:03.321947549 +0200
@@ -10,7 +10,26 @@
  * 2 of the License, or (at your option) any later version.
  */
 
-#ifdef __KERNEL__
+#ifndef __KERNEL__
+
+#include <unistd.h>
+
+#define PAGE_SIZE (getpagesize())
+static __inline__ int __getpageshift()
+{
+    int pagesize = getpagesize();
+#if (__GNUC__ >= 4) || ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 4))
+    return (__builtin_clz(pagesize) ^ 31);
+#else
+    register int pageshift = -1;
+    while (pagesize) { pagesize >>= 1; pageshift++; }
+    return pageshift;
+#endif
+}
+#define PAGE_SHIFT (__getpageshift())
+#define PAGE_MASK    (~(PAGE_SIZE-1))
+
+#else
 #include <asm/asm-compat.h>
 #include <asm/kdump.h>
 
--- linux-2.6.20/include/asm-sparc/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-sparc/page.h	2007-04-02 22:09:00.405200538 +0200
@@ -8,7 +8,26 @@
 #ifndef _SPARC_PAGE_H
 #define _SPARC_PAGE_H
 
-#ifdef __KERNEL__
+#ifndef __KERNEL__
+
+#include <unistd.h>
+
+#define PAGE_SIZE (getpagesize())
+static __inline__ int __getpageshift()
+{
+    int pagesize = getpagesize();
+#if (__GNUC__ >= 4) || ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 4))
+    return (__builtin_clz(pagesize) ^ 31);
+#else
+    register int pageshift = -1;
+    while (pagesize) { pagesize >>= 1; pageshift++; }
+    return pageshift;
+#endif
+}
+#define PAGE_SHIFT (__getpageshift())
+#define PAGE_MASK    (~(PAGE_SIZE-1))
+
+#else
 
 #ifdef CONFIG_SUN4
 #define PAGE_SHIFT   13
--- linux-2.6.20/include/asm-sparc64/page.h.orig	2007-02-04 19:44:54.000000000 +0100
+++ linux-2.6.20/include/asm-sparc64/page.h	2007-04-02 22:09:30.722928247 +0200
@@ -3,7 +3,26 @@
 #ifndef _SPARC64_PAGE_H
 #define _SPARC64_PAGE_H
 
-#ifdef __KERNEL__
+#ifndef __KERNEL__
+
+#include <unistd.h>
+
+#define PAGE_SIZE (getpagesize())
+static __inline__ int __getpageshift()
+{
+    int pagesize = getpagesize();
+#if (__GNUC__ >= 4) || ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 4))
+    return (__builtin_clz(pagesize) ^ 31);
+#else
+    register int pageshift = -1;
+    while (pagesize) { pagesize >>= 1; pageshift++; }
+    return pageshift;
+#endif
+}
+#define PAGE_SHIFT (__getpageshift())
+#define PAGE_MASK    (~(PAGE_SIZE-1))
+
+#else
 
 #include <asm/const.h>
 
