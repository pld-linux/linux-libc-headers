diff -Nur linux-libc-headers-2.6.12.0.orig/include/asm-m32r/elf.h linux-libc-headers-2.6.12.0/include/asm-m32r/elf.h
--- linux-libc-headers-2.6.12.0.orig/include/asm-m32r/elf.h	2005-03-13 21:54:07.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/asm-m32r/elf.h	2005-08-23 21:24:27.000000000 +0200
@@ -11,6 +11,7 @@
 #include <asm/ptrace.h>
 #include <asm/user.h>
 #include <asm/page.h>
+#include <endian.h>
 
 /* M32R relocation types  */
 #define	R_M32R_NONE		0
@@ -82,9 +83,9 @@
  * These are used to set parameters in the core dumps.
  */
 #define ELF_CLASS	ELFCLASS32
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 #define ELF_DATA	ELFDATA2LSB
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 #define ELF_DATA	ELFDATA2MSB
 #else
 #error no endian defined
diff -Nur linux-libc-headers-2.6.12.0.orig/include/asm-m32r/stat.h linux-libc-headers-2.6.12.0/include/asm-m32r/stat.h
--- linux-libc-headers-2.6.12.0.orig/include/asm-m32r/stat.h	2005-03-25 20:39:05.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/asm-m32r/stat.h	2005-08-23 21:26:07.000000000 +0200
@@ -5,7 +5,7 @@
 
 /* orig : i386 2.4.18 */
 
-#include <asm/byteorder.h>
+#include <endian>
 
 struct __old_kernel_stat {
 	unsigned short st_dev;
@@ -67,10 +67,10 @@
 	long long	st_size;
 	unsigned long	st_blksize;
 
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	unsigned long	__pad4;		/* future possible st_blocks high bits */
 	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
 	unsigned long	__pad4;		/* future possible st_blocks high bits */
 #else
diff -Nur linux-libc-headers-2.6.12.0.orig/include/asm-mips/jmr3927/jmr3927.h linux-libc-headers-2.6.12.0/include/asm-mips/jmr3927/jmr3927.h
--- linux-libc-headers-2.6.12.0.orig/include/asm-mips/jmr3927/jmr3927.h	2004-10-31 20:54:13.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/asm-mips/jmr3927/jmr3927.h	2005-08-23 21:27:06.000000000 +0200
@@ -16,6 +16,7 @@
 #ifndef __ASSEMBLY__
 #include <asm/system.h>
 #endif
+#include <endian.h>
 
 /* CS */
 #define JMR3927_ROMCE0	0x1fc00000	/* 4M */
@@ -148,10 +149,10 @@
 #define jmr3927_ioc_reg_out(d, a)	((*(volatile unsigned short *)(a)) = (d) << 8)
 #define jmr3927_ioc_reg_in(a)		(((*(volatile unsigned short *)(a)) >> 8) & 0xff)
 #else
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 #define jmr3927_ioc_reg_out(d, a)	((*(volatile unsigned char *)(a)) = (d))
 #define jmr3927_ioc_reg_in(a)		(*(volatile unsigned char *)(a))
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 #define jmr3927_ioc_reg_out(d, a)	((*(volatile unsigned char *)((a)^1)) = (d))
 #define jmr3927_ioc_reg_in(a)		(*(volatile unsigned char *)((a)^1))
 #else
diff -Nur linux-libc-headers-2.6.12.0.orig/include/asm-mips/jmr3927/tx3927.h linux-libc-headers-2.6.12.0/include/asm-mips/jmr3927/tx3927.h
--- linux-libc-headers-2.6.12.0.orig/include/asm-mips/jmr3927/tx3927.h	2004-10-31 20:54:13.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/asm-mips/jmr3927/tx3927.h	2005-08-23 21:27:45.000000000 +0200
@@ -67,9 +67,9 @@
 	volatile unsigned long csr;
 };
 
-#include <asm/byteorder.h>
+#include <endian.h>
 
-#ifdef __BIG_ENDIAN
+#if __BYTE_ORDER == __BIG_ENDIAN
 #define endian_def_s2(e1,e2)	\
 	volatile unsigned short e1,e2
 #define endian_def_sb2(e1,e2,e3)	\
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/aio_abi.h linux-libc-headers-2.6.12.0/include/linux/aio_abi.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/aio_abi.h	2005-07-06 02:17:21.000000000 +0200
+++ linux-libc-headers-2.6.12.0/include/linux/aio_abi.h	2005-08-23 21:45:22.000000000 +0200
@@ -53,9 +53,9 @@
 	__s64		res2;		/* secondary result */
 };
 
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 #define PADDED(x,y)	x, y
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 #define PADDED(x,y)	y, x
 #else
 #error edit for your odd byteorder.
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/cdrom.h linux-libc-headers-2.6.12.0/include/linux/cdrom.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/cdrom.h	2005-01-08 15:03:51.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/cdrom.h	2005-08-23 21:44:23.000000000 +0200
@@ -15,7 +15,7 @@
 #include <endian.h>
 #include <byteswap.h>
 
-#if !defined(__LITTLE_ENDIAN) && !defined(__BIG_ENDIAN)
+#if (__BYTE_ORDER != __LITTLE_ENDIAN) && (__BYTE_ORDER != __BIG_ENDIAN)
 #error "Endian problem - this didn't happen"
 #endif
 
@@ -699,20 +699,20 @@
 } dvd_authinfo;
 
 struct request_sense {
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 valid		: 1;
 	__u8 error_code		: 7;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 error_code		: 7;
 	__u8 valid		: 1;
 #endif
 	__u8 segment_number;
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved1		: 2;
 	__u8 ili		: 1;
 	__u8 reserved2		: 1;
 	__u8 sense_key		: 4;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 sense_key		: 4;
 	__u8 reserved2		: 1;
 	__u8 ili		: 1;
@@ -771,22 +771,22 @@
 
 struct mrw_feature_desc {
 	__u16 feature_code;
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved1		: 2;
 	__u8 feature_version	: 4;
 	__u8 persistent		: 1;
 	__u8 curr		: 1;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 curr		: 1;
 	__u8 persistent		: 1;
 	__u8 feature_version	: 4;
 	__u8 reserved1		: 2;
 #endif
 	__u8 add_len;
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved2		: 7;
 	__u8 write		: 1;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 write		: 1;
 	__u8 reserved2		: 7;
 #endif
@@ -798,12 +798,12 @@
 /* cf. mmc4r02g.pdf 5.3.10 Random Writable Feature (0020h) pg 197 of 635 */
 struct rwrt_feature_desc {
 	__u16 feature_code;
-#if defined(__BIG_ENDIAN_BITFIELD)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved1		: 2;
 	__u8 feature_version	: 4;
 	__u8 persistent		: 1;
 	__u8 curr		: 1;
-#elif defined(__LITTLE_ENDIAN_BITFIELD)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 curr		: 1;
 	__u8 persistent		: 1;
 	__u8 feature_version	: 4;
@@ -813,10 +813,10 @@
 	__u32 last_lba;
 	__u32 block_size;
 	__u16 blocking;
-#if defined(__BIG_ENDIAN_BITFIELD)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved2		: 7;
 	__u8 page_present	: 1;
-#elif defined(__LITTLE_ENDIAN_BITFIELD)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 page_present	: 1;
 	__u8 reserved2		: 7;
 #endif
@@ -825,12 +825,12 @@
 
 typedef struct {
 	__u16 disc_information_length;
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved1			: 3;
         __u8 erasable			: 1;
         __u8 border_status		: 2;
         __u8 disc_status		: 2;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
         __u8 disc_status		: 2;
         __u8 border_status		: 2;
         __u8 erasable			: 1;
@@ -840,14 +840,14 @@
 	__u8 n_sessions_lsb;
 	__u8 first_track_lsb;
 	__u8 last_track_lsb;
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 did_v			: 1;
         __u8 dbc_v			: 1;
         __u8 uru			: 1;
         __u8 reserved2			: 2;
 	__u8 dbit			: 1;
 	__u8 mrw_status			: 2;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 mrw_status			: 2;
 	__u8 dbit			: 1;
         __u8 reserved2			: 2;
@@ -872,7 +872,7 @@
 	__u8 track_lsb;
 	__u8 session_lsb;
 	__u8 reserved1;
-#if defined(__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8 reserved2			: 2;
         __u8 damage			: 1;
         __u8 copy			: 1;
@@ -885,7 +885,7 @@
 	__u8 reserved3			: 6;
 	__u8 lra_v			: 1;
 	__u8 nwa_v			: 1;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
         __u8 track_mode			: 4;
         __u8 copy			: 1;
         __u8 damage			: 1;
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/icmpv6.h linux-libc-headers-2.6.12.0/include/linux/icmpv6.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/icmpv6.h	2005-03-26 19:58:03.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/icmpv6.h	2005-08-23 21:45:49.000000000 +0200
@@ -24,13 +24,13 @@
 		} u_echo;
 
                 struct icmpv6_nd_advt {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
                         __u32		reserved:5,
                         		override:1,
                         		solicited:1,
                         		router:1,
 					reserved2:24;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
                         __u32		router:1,
 					solicited:1,
                         		override:1,
@@ -42,12 +42,12 @@
 
                 struct icmpv6_nd_ra {
 			__u8		hop_limit;
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 			__u8		reserved:6,
 					other:1,
 					managed:1;
 
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 			__u8		managed:1,
 					other:1,
 					reserved:6;
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/ide.h linux-libc-headers-2.6.12.0/include/linux/ide.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/ide.h	2005-03-13 21:54:02.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/ide.h	2005-08-23 21:45:12.000000000 +0200
@@ -221,14 +221,14 @@
 typedef union {
 	unsigned all			: 8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned set_geometry	: 1;
 		unsigned recalibrate	: 1;
 		unsigned set_multmode	: 1;
 		unsigned set_tune	: 1;
 		unsigned serviced	: 1;
 		unsigned reserved	: 3;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned reserved	: 3;
 		unsigned serviced	: 1;
 		unsigned set_tune	: 1;
@@ -250,10 +250,10 @@
 typedef union {
 	unsigned all			:16;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned low		:8;	/* LSB */
 		unsigned high		:8;	/* MSB */
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned high		:8;	/* MSB */
 		unsigned low		:8;	/* LSB */
 #else
@@ -277,7 +277,7 @@
 typedef union {
 	unsigned all			:8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned mark		:1;
 		unsigned tzero		:1;
 		unsigned abrt		:1;
@@ -286,7 +286,7 @@
 		unsigned mce		:1;
 		unsigned ecc		:1;
 		unsigned bdd		:1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned bdd		:1;
 		unsigned ecc		:1;
 		unsigned mce		:1;
@@ -313,13 +313,13 @@
 typedef union {
 	unsigned all			: 8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned head		: 4;
 		unsigned unit		: 1;
 		unsigned bit5		: 1;
 		unsigned lba		: 1;
 		unsigned bit7		: 1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned bit7		: 1;
 		unsigned lba		: 1;
 		unsigned bit5		: 1;
@@ -351,7 +351,7 @@
 typedef union {
 	unsigned all			:8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned check		:1;
 		unsigned idx		:1;
 		unsigned corr		:1;
@@ -360,7 +360,7 @@
 		unsigned df		:1;
 		unsigned drdy		:1;
 		unsigned bsy		:1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned bsy		:1;
 		unsigned drdy		:1;
 		unsigned df		:1;
@@ -388,14 +388,14 @@
 typedef union {
 	unsigned all			: 8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned bit0		: 1;
 		unsigned nIEN		: 1;
 		unsigned SRST		: 1;
 		unsigned bit3		: 1;
 		unsigned reserved456	: 3;
 		unsigned HOB		: 1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned HOB		: 1;
 		unsigned reserved456	: 3;
 		unsigned bit3		: 1;
@@ -419,12 +419,12 @@
 typedef union {
 	unsigned all			:8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned dma		:1;
 		unsigned reserved321	:3;
 		unsigned reserved654	:3;
 		unsigned reserved7	:1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned reserved7	:1;
 		unsigned reserved654	:3;
 		unsigned reserved321	:3;
@@ -445,11 +445,11 @@
 typedef union {
 	unsigned all			:8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned cod		:1;
 		unsigned io		:1;
 		unsigned reserved	:6;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned reserved	:6;
 		unsigned io		:1;
 		unsigned cod		:1;
@@ -471,13 +471,13 @@
 typedef union {
 	unsigned all			:8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned ili		:1;
 		unsigned eom		:1;
 		unsigned abrt		:1;
 		unsigned mcr		:1;
 		unsigned sense_key	:4;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned sense_key	:4;
 		unsigned mcr		:1;
 		unsigned abrt		:1;
@@ -506,14 +506,14 @@
 typedef union {
 	unsigned all			:8;
 	struct {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 		unsigned sam_lun	:3;
 		unsigned reserved3	:1;
 		unsigned drv		:1;
 		unsigned one5		:1;
 		unsigned reserved6	:1;
 		unsigned one7		:1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 		unsigned one7		:1;
 		unsigned reserved6	:1;
 		unsigned one5		:1;
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/if_hippi.h linux-libc-headers-2.6.12.0/include/linux/if_hippi.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/if_hippi.h	2004-10-31 20:55:19.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/if_hippi.h	2005-08-23 21:46:49.000000000 +0200
@@ -82,7 +82,7 @@
 {
 #if 0
 	__u8		ulp;				/* must contain 4 */
-#if defined (__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8		d1_data_present:1;		/* must be 1 */
 	__u8		start_d2_burst_boundary:1;	/* must be zero */
 	__u8		reserved:6;			/* must be zero */
@@ -91,7 +91,7 @@
 	__u16		d1_area_size:8;			/* must be 3 */
 	__u16		d2_offset:3;			/* must be zero */
 #endif
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8		reserved:6;			/* must be zero */
 	__u8	 	start_d2_burst_boundary:1;	/* must be zero */
 	__u8		d1_data_present:1;		/* must be 1 */
@@ -111,20 +111,20 @@
 
 struct hippi_le_hdr
 {
-#if defined (__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8		fc:3;
 	__u8		double_wide:1;
 	__u8		message_type:4;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8		message_type:4;
 	__u8		double_wide:1;
 	__u8		fc:3;
 #endif
 	__u8		dest_switch_addr[3];
-#if defined (__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8		dest_addr_type:4,
 			src_addr_type:4;
-#elif defined(__LITTLE_ENDIAN)
+#elif __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8		src_addr_type:4,
 			dest_addr_type:4;
 #endif
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/if_pppox.h linux-libc-headers-2.6.12.0/include/linux/if_pppox.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/if_pppox.h	2005-03-13 21:54:01.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/if_pppox.h	2005-08-23 21:47:05.000000000 +0200
@@ -91,10 +91,10 @@
 #define PTT_GEN_ERR  	__constant_htons(0x0203)
 
 struct pppoe_hdr {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 ver : 4;
 	__u8 type : 4;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 	__u8 type : 4;
 	__u8 ver : 4;
 #else
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/igmp.h linux-libc-headers-2.6.12.0/include/linux/igmp.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/igmp.h	2005-03-26 19:58:04.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/igmp.h	2005-08-23 21:47:22.000000000 +0200
@@ -67,11 +67,11 @@
 	__u8 code;
 	__u16 csum;
 	__u32 group;
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8 qrv:3,
 	     suppress:1,
 	     resv:4;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 	__u8 resv:4,
 	     suppress:1,
 	     qrv:3;
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/ip.h linux-libc-headers-2.6.12.0/include/linux/ip.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/ip.h	2004-10-31 20:55:50.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/ip.h	2005-08-23 21:47:40.000000000 +0200
@@ -83,10 +83,10 @@
 #ifndef __NETINET_IP_H
 
 struct iphdr {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8	ihl:4,
 		version:4;
-#elif defined (__BIG_ENDIAN)
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u8	version:4,
   		ihl:4;
 #else
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/ipv6.h linux-libc-headers-2.6.12.0/include/linux/ipv6.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/ipv6.h	2004-10-31 20:56:07.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/ipv6.h	2005-08-23 21:43:11.000000000 +0200
@@ -102,10 +102,10 @@
  */
 
 struct ipv6hdr {
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	__u8			priority:4,
 				version:4;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 	__u8			version:4,
 				priority:4;
 #else
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/mtd/map.h linux-libc-headers-2.6.12.0/include/linux/mtd/map.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/mtd/map.h	2005-03-25 20:34:24.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/mtd/map.h	2005-08-23 21:31:21.000000000 +0200
@@ -7,6 +7,7 @@
 #include <linux/types.h>
 #include <asm/system.h>
 #include <asm/io.h>
+#include <endian.h>
 
 /* The map stuff is very simple. You fill in your struct map_info with
    a handful of routines for accessing the device, making sure they handle
@@ -160,7 +161,7 @@
 	} else {
 		for (i=start; i < start+len; i++) {
 			int bitpos;
-#ifdef __LITTLE_ENDIAN
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 			bitpos = i*8;
 #else /* __BIG_ENDIAN */
 			bitpos = (map_bankwidth(map)-1-i)*8;
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/raid/md_p.h linux-libc-headers-2.6.12.0/include/linux/raid/md_p.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/raid/md_p.h	2005-03-26 19:58:00.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/raid/md_p.h	2005-08-23 21:32:36.000000000 +0200
@@ -16,6 +16,7 @@
 #define _MD_P_H
 
 #include <asm/types.h>
+#include <endian.h>
 
 /*
  * RAID superblock.
@@ -130,7 +131,7 @@
 	__u32 failed_disks;	/*  4 Number of failed disks		      */
 	__u32 spare_disks;	/*  5 Number of spare disks		      */
 	__u32 sb_csum;		/*  6 checksum of the whole superblock        */
-#ifdef __BIG_ENDIAN
+#if __BYTE_ORDER == __BIG_ENDIAN
 	__u32 events_hi;	/*  7 high-order of superblock update count   */
 	__u32 events_lo;	/*  8 low-order of superblock update count    */
 	__u32 cp_events_hi;	/*  9 high-order of checkpoint update count   */
diff -Nur linux-libc-headers-2.6.12.0.orig/include/linux/tcp.h linux-libc-headers-2.6.12.0/include/linux/tcp.h
--- linux-libc-headers-2.6.12.0.orig/include/linux/tcp.h	2005-01-08 15:03:40.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/linux/tcp.h	2005-08-23 21:48:11.000000000 +0200
@@ -18,14 +18,14 @@
 #define _LINUX_TCP_H
 
 #include <linux/types.h>
-#include <asm/byteorder.h>
+#include <endian.h>
 
 struct tcphdr {
 	__u16	source;
 	__u16	dest;
 	__u32	seq;
 	__u32	ack_seq;
-#if defined(__LITTLE_ENDIAN)
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	__u16	res1:4,
 		doff:4,
 		fin:1,
@@ -36,7 +36,7 @@
 		urg:1,
 		ece:1,
 		cwr:1;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 	__u16	doff:4,
 		res1:4,
 		cwr:1,
diff -Nur linux-libc-headers-2.6.12.0.orig/include/sound/cs46xx_dsp_scb_types.h linux-libc-headers-2.6.12.0/include/sound/cs46xx_dsp_scb_types.h
--- linux-libc-headers-2.6.12.0.orig/include/sound/cs46xx_dsp_scb_types.h	2005-03-25 20:30:35.000000000 +0100
+++ linux-libc-headers-2.6.12.0/include/sound/cs46xx_dsp_scb_types.h	2005-08-23 21:49:22.000000000 +0200
@@ -27,12 +27,12 @@
 #ifndef __CS46XX_DSP_SCB_TYPES_H__
 #define __CS46XX_DSP_SCB_TYPES_H__
 
-#include <asm/byteorder.h>
+#include <endian.h>
 
 #ifndef ___DSP_DUAL_16BIT_ALLOC
-#if   defined(__LITTLE_ENDIAN)
+#if   __BYTE_ORDER == __LITTLE_ENDIAN
 #define ___DSP_DUAL_16BIT_ALLOC(a,b) __u16 a; __u16 b;
-#elif defined(__BIG_ENDIAN)
+#elif __BYTE_ORDER == __BIG_ENDIAN
 #define ___DSP_DUAL_16BIT_ALLOC(a,b) __u16 b; __u16 a;
 #else
 #error Not __LITTLE_ENDIAN and not __BIG_ENDIAN, then what ???
